using ECommerce_One.Context;
using Microsoft.AspNetCore.Authentication.Cookies;
using Microsoft.EntityFrameworkCore;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.
builder.Services.AddControllersWithViews();

// ????? ??? DbContext ???? ??????? ?????? ????????
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("MyConnection")));

// ????? ??? Session ?? ????? ??? ?????? ??????
builder.Services.AddSession(options =>
{
    options.IdleTimeout = TimeSpan.FromMinutes(60); // ??? ?????? ?????? (????? ?????? ??? ??????)
    options.Cookie.HttpOnly = true; // ????? ?????? ???? ??? Cookie HttpOnly
    options.Cookie.IsEssential = true; // ??? ??? Session ????? ??? ?? ??? ??? ????? ????? ????????
});

builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(options =>
    {
        options.LoginPath = "/User/Login";  // ????? ???? ????? ?????? ??? ??? ?????
    });
var app = builder.Build();

// Configure the HTTP request pipeline.
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    app.UseHsts();
}

app.UseHttpsRedirection();
app.UseStaticFiles();

app.UseRouting();

// ????? ??? Session ??? ??? UseRouting ???? ??? UseAuthorization
app.UseSession();
app.UseAuthentication();
app.UseAuthorization();

app.UseAuthorization();

app.MapControllerRoute(
    name: "default",
    pattern: "{controller=User}/{action=LOGIN}/{id?}");

app.Run();
